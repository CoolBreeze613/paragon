{"version":3,"file":"main.d32a47680113bcc2a55f.bundle.js","sources":["webpack:///./src/InputText/index.jsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\n\nimport asInput, { inputProps, defaultProps } from '../asInput';\nimport withDeprecatedProps, { DEPR_TYPES } from '../withDeprecatedProps';\n\n\nfunction Text(props) {\n  return (\n    <input\n      id={props.id}\n      className={classNames(props.className)}\n      type={props.type || 'text'}\n      name={props.name}\n      value={props.value}\n      placeholder={props.placeholder}\n      aria-describedby={props.describedBy}\n      onChange={props.onChange}\n      onKeyPress={props.onKeyPress}\n      onBlur={props.onBlur}\n      aria-invalid={!props.isValid}\n      autoComplete={props.autoComplete}\n      disabled={props.disabled}\n      readOnly={props.readOnly}\n      required={props.required}\n      ref={props.inputRef}\n      themes={props.themes}\n    />\n  );\n}\n\nconst textPropTypes = {\n  type: PropTypes.string,\n  describedBy: PropTypes.string,\n  isValid: PropTypes.bool,\n  autoComplete: PropTypes.string,\n  inputRef: PropTypes.func,\n  readOnly: PropTypes.bool,\n};\n\nconst textDefaultProps = {\n  type: 'text',\n  describedBy: '',\n  isValid: true,\n  autoComplete: 'on',\n  inputRef: () => {},\n  readOnly: false,\n};\n\nText.propTypes = { ...textPropTypes, ...inputProps };\nText.defaultProps = { ...textDefaultProps, ...defaultProps };\n\nconst InputText = asInput(withDeprecatedProps(Text, 'InputText', {\n  className: {\n    deprType: DEPR_TYPES.FORMAT,\n    expect: value => typeof value === 'string',\n    transform: value => (Array.isArray(value) ? value.join(' ') : value),\n    message: 'It should be a string.',\n  },\n}));\n\nexport default InputText;\n"],"mappings":"AASA","sourceRoot":""}